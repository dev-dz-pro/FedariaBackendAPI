# image: docker:dind

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

variables:
  DOCKER_REGISTRY: 854130342536.dkr.ecr.eu-west-3.amazonaws.com
  IMAGE_TAG_LATEST: $DOCKER_REGISTRY/vifbox:latest
  AWS_DEFAULT_REGION: eu-west-3

build-job:       # This job runs in the build stage, which runs first.
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  stage: build
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker build -t $IMAGE_TAG_LATEST -f Dockerfile .
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push $IMAGE_TAG_LATEST
#   rules:
#     - if: '$CI_COMMIT_MESSAGE =~ /composer/'
#       when: never
#     - when: always

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
